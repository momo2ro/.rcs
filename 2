#include <stdio.h>
#include <stdlib.h>

#define _GNU_SOURCE
#include <getopt.h>

static void do_tail(FILE *f, long nlines);

#define DEFAULT_N_LINES 10

static struct option longopts[] = {
    {"lines", required_argument, NULL, 'n'},
    {"help", no_argument,        NULL, 'h'},
    {0, 0, 0, 0}
};

int main(int argc, char *argv[]) {
    int i;
    long is;
    int opt;
    long nlines = DEFAULT_N_LINES;

    while ((opt = getopt_long(argc, argv, "n:", longopts, NULL)) != -1) {
        switch (opt) {
            case 'n':
                nlines = atoi(optarg);
                break;
            case 'h':
                fprintf(stdout, "Usage: %s [-n LINES] [FILE ...:\n", argv[0]);
                exit(0);
            case '?':
                fprintf(stdout, "Usage: %s [-n LINES] [FILE ...:\n", argv[0]);
                exit(1);
            }
    }

    for (i = 1; i < argc; i++) {
        FILE *f;
        int c;
        int e = '\n';

        f = fopen(argv[i], "r");
        if (!f) {
            perror(argv[i]);
            exit(1);
        }
        is = 0;
        while((c = fgetc(f)) != EOF) {
            if (c == '\n') is++;
            e = c;
        }
        if (e != '\n') is++;
        fclose(f);
    }
    exit(0);
}
